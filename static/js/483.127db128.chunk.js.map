{"version":3,"file":"static/js/483.127db128.chunk.js","mappings":"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","sources":["API.js","components/Movielist/Movie.styled.js","components/Movielist/MovieList.js","routes/Movies/Movies.styled.js","routes/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = '79c27b95cee402d8dc106d8509c1b5f2';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const response = data.results;\n  return response;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  // const { results } = data;\n  // return { results };\n  return data.results;\n}\n\nexport async function getMovieDeteils(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  return data.results;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  gap: 15px 15px;\n`;\n\nexport const MovieNavLink = styled(NavLink)`\n  width: 100%;\n  flex-basis: calc(100% / 4 - 26px);\n  padding: 5px;\n  color: black;\n  font-size: 18px;\n  border-radius: 5px;\n  text-decoration: none;\n  border: 2px;\n  margin-top: 5px;\n`;\n\nexport const MovieImg = styled.img`\n  display: 'block';\n  width: 240px;\n  height: 360px;\n  border-radius: 5px;\n  margin-left: 50px;\n\n  &:hover {\n    transform: scale(1.03);\n    transition: 250ms;\n  }\n`;\nexport const MovieTitle = styled.h3`\n  margin-bottom: 30px;\n  margin-top: 30px;\n  font-size: 15px;\n  text-align: center;\n  color: orange;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListUl,\n  MovieNavLink,\n  MovieImg,\n  MovieTitle,\n} from 'components/Movielist/Movie.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation;\n\n  return (\n    <MovieListUl>\n      {movies &&\n        movies.map(({ id, poster_path, title }) => (\n          <MovieNavLink\n            to={`/movies/${id}`}\n            key={id}\n            state={{ from: location }}\n          >\n            <MovieImg\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieNavLink>\n        ))}\n    </MovieListUl>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  padding-top: 30px;\n  padding-bottom: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const InputStyled = styled.input`\n  margin: 0;\n  padding: 10px;\n  min-width: 300px;\n  height: 40px;\n  background-color: #fbf9fa3f;\n  color: #000;\n  font-size: 20px;\n  border-radius: 5px 0 0 5px;\n`;\n\nexport const ButtonStyled = styled.button`\n  height: 40px;\n  width: 57px;\n  background-color: #fbf9fa3f;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  margin-left: -2px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { FcSearch } from 'react-icons/fc';\nimport { getMovies } from '../../API.js';\nimport MovieList from 'components/Movielist/MovieList';\n\nimport {\n  FormStyled,\n  InputStyled,\n  ButtonStyled,\n} from 'routes/Movies/Movies.styled.js';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchQuery(\n      e.currentTarget.elements.searchQuery.value.toLowerCase().trim()\n    );\n    setSearchParams({\n      query: e.currentTarget.elements.searchQuery.value.toLowerCase().trim(),\n    });\n  };\n\n  console.log(searchParams);\n  const currentQuery = searchParams.get('query');\n  console.log(currentQuery);\n\n  useEffect(() => {\n    if (!currentQuery) {\n      console.log('nety');\n    }\n  }, [currentQuery]);\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await getMovies(searchQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    } else if (currentQuery) {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await getMovies(currentQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    }\n\n    return;\n  }, [searchQuery, currentQuery]);\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder=\"Search...\"\n        />\n        <ButtonStyled type=\"submit\">\n          <div>\n            <FcSearch />\n          </div>\n        </ButtonStyled>\n      </FormStyled>\n      {!error ? (\n        <MovieList movies={movies} location={location} />\n      ) : (\n        <p>No results found for `{searchQuery}`</p>\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","key","getTrending","data","response","results","getMovies","searchQuery","getMovieDeteils","id","getMovieCredits","cast","getMovieReviews","MovieListUl","styled","MovieNavLink","NavLink","MovieImg","MovieTitle","movies","location","useLocation","map","poster_path","title","to","state","from","src","alt","FormStyled","InputStyled","ButtonStyled","useState","setSearchQuery","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","console","log","currentQuery","get","useEffect","getMovieBySearch","message","onSubmit","e","preventDefault","currentTarget","elements","value","toLowerCase","trim","query","name","type","autoComplete","autoFocus","placeholder","MovieList"],"sourceRoot":""}