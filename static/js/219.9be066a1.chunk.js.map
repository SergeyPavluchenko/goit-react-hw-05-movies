{"version":3,"file":"static/js/219.9be066a1.chunk.js","mappings":"kTACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KACFC,EAAWD,EAAKE,QAFjB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCM,IAFzD,uBACGJ,EADH,EACGA,KADH,kBAMEA,EAAKE,SANP,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACGR,EADH,oBADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKQ,MAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,2BADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKE,SAJP,kE,yKChCMQ,EAAMC,EAAAA,GAAAA,IAAH,0CAIHC,EAAWD,EAAAA,GAAAA,GAAH,8HAQRE,EAAaF,EAAAA,GAAAA,GAAH,uMAWVG,EAAcH,EAAAA,GAAAA,IAAH,oFAMXI,EAAgBJ,EAAAA,GAAAA,EAAH,uG,SC0B1B,EA5Ca,WACX,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEWf,EAAAA,EAAAA,IAAgBgB,OAAOJ,IAFlC,OAENlB,EAFM,OAGZuB,QAAQC,IAAIxB,GACZiB,EAAWjB,GAJC,gDAMZuB,QAAQC,IAAI,KAAMC,SANN,yDAAH,qDASbJ,GACD,GAAE,CAACH,KAGF,UAACT,EAAD,WACsB,IAAnBO,EAAQU,SACP,SAACf,EAAD,UACGK,GACCA,EAAQW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWzB,EAAS,EAATA,GAC5C,OACE,UAACO,EAAD,YACE,SAACC,EAAD,CACEkB,IAAG,0CAAqCF,GACxCG,IAAKJ,KAEP,SAACd,EAAD,UAAgBc,KAChB,UAACd,EAAD,yBAA2BgB,EAA3B,SANezB,EASpB,MAEJ,IACiB,IAAnBW,EAAQU,SACP,SAACZ,EAAD,sEAMP,C","sources":["API.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = '79c27b95cee402d8dc106d8509c1b5f2';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const response = data.results;\n  return response;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  // const { results } = data;\n  // return { results };\n  return data.results;\n}\n\nexport async function getMovieDeteils(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  return data.results;\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  padding: 20px;\n`;\n\nexport const BoxStyle = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 30px 15px;\n  list-style: none;\n`;\n\nexport const BoxStyleLi = styled.li`\n  width: 100%;\n  height: 400px;\n  flex-basis: calc(100% / 5 - 15px);\n  padding: 5px;\n  color: black;\n  background: #fbf9fa3f;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nexport const BoxStyleImg = styled.img`\n  width: 100%;\n  max-height: 300px;\n  object-fit: cover;\n`;\n\nexport const BoxStyledText = styled.p`\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  color: black;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../API';\n\nimport {\n  Box,\n  BoxStyle,\n  BoxStyleLi,\n  BoxStyleImg,\n  BoxStyledText,\n} from 'components/Cast/Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const response = await getMovieCredits(Number(movieId));\n        console.log(response);\n        setCredits(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <Box>\n      {credits.length !== 0 && (\n        <BoxStyle>\n          {credits &&\n            credits.map(({ name, profile_path, character, id }) => {\n              return (\n                <BoxStyleLi key={id}>\n                  <BoxStyleImg\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                  />\n                  <BoxStyledText>{name}</BoxStyledText>\n                  <BoxStyledText>Character: {character} </BoxStyledText>\n                </BoxStyleLi>\n              );\n            })}\n        </BoxStyle>\n      )}{' '}\n      {credits.length === 0 && (\n        <BoxStyledText>\n          We haven't information about the actors of this movie\n        </BoxStyledText>\n      )}\n    </Box>\n  );\n};\nexport default Cast;\n"],"names":["axios","key","getTrending","data","response","results","getMovies","searchQuery","getMovieDeteils","id","getMovieCredits","cast","getMovieReviews","Box","styled","BoxStyle","BoxStyleLi","BoxStyleImg","BoxStyledText","useState","credits","setCredits","movieId","useParams","useEffect","getCast","Number","console","log","message","length","map","name","profile_path","character","src","alt"],"sourceRoot":""}