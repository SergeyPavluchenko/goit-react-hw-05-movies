{"version":3,"file":"static/js/645.cbdea961.chunk.js","mappings":"kQACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KACFC,EAAWD,EAAKE,QAFjB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCM,IAFzD,uBACGJ,EADH,EACGA,KADH,kBAMEA,EAAKE,SANP,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACGR,EADH,oBADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF,kE,gGClBMO,EAAcC,EAAAA,GAAAA,GAAH,mIASXC,EAAUD,EAAAA,GAAAA,GAAH,yNAYPE,EAAWF,EAAAA,GAAAA,IAAH,sMAYRG,EAAaH,EAAAA,GAAAA,GAAH,kI,SCRvB,EAnBkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,EAAWC,EAAAA,GAEjB,OACE,SAACP,EAAD,UACGK,GACCA,EAAOG,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACT,UAACR,EAAD,CAASS,GAAE,kBAAaZ,GAAea,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAACH,EAAD,CACEW,IAAG,0CAAqCL,GACxCM,IAAKL,KAEP,SAACN,EAAD,UAAaM,MALoBX,EAD1B,KAWlB,C,uLCvBYiB,EAASf,EAAAA,GAAAA,IAAH,2C,SCkBnB,EAjBgB,WACd,OACE,SAACe,EAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,iBACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,EChBYC,EAAiBxB,EAAAA,GAAAA,GAAH,0ICgC3B,EA3Ba,WACX,OAA4ByB,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMvB,GAAWC,EAAAA,EAAAA,MAejB,OAbAuB,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAW,mCAAG,8GAEKvC,EAAAA,EAAAA,MAFL,OAEVa,EAFU,OAGhBsB,EAAUtB,GAHM,gDAKhB2B,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBH,GACD,GAAE,KAGD,2BACGH,IAAa,SAAC,EAAD,KACd,SAACH,EAAD,+BACA,SAACU,EAAA,EAAD,CAAW9B,OAAQA,EAAQC,SAAUA,MAG1C,C","sources":["API.js","components/Movielist/Movie.styled.js","components/Movielist/MovieList.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","routes/Home/Home.styled.js","routes/Home/Home.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = '79c27b95cee402d8dc106d8509c1b5f2';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const response = data.results;\n  return response;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  // const { results } = data;\n  // return { results };\n  return data.results;\n}\n\nexport async function getMovieDeteils(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  return data.results;\n}\n","import styled from 'styled-components';\n\nexport const MovieListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  gap: 15px 15px;\n`;\n\nexport const MovieLi = styled.li`\n  width: 100%;\n  flex-basis: calc(100% / 4 - 26px);\n  padding: 5px;\n  color: black;\n  font-size: 18px;\n  border-radius: 5px;\n  text-decoration: none;\n  border: 2px;\n  margin-top: 5px;\n`;\n\nexport const MovieImg = styled.img`\n  display: 'block';\n  width: 240px;\n  height: 360px;\n  border-radius: 5px;\n  margin-left: 50px;\n\n  &:hover {\n    transform: scale(1.03);\n    transition: 250ms;\n  }\n`;\nexport const MovieTitle = styled.h3`\n  margin-bottom: 30px;\n  margin-top: 30px;\n  font-size: 15px;\n  text-align: center;\n  color: orange;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListUl,\n  MovieLi,\n  MovieImg,\n  MovieTitle,\n} from 'components/Movielist/Movie.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation;\n\n  return (\n    <MovieListUl>\n      {movies &&\n        movies.map(({ id, poster_path, title }) => (\n          <MovieLi to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <MovieImg\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieLi>\n        ))}\n    </MovieListUl>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Loader = styled.div`\n  margin: 0 auto;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Loader } from './Loader.styled';\n\nconst Spinner = () => {\n  return (\n    <Loader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"rgb(24, 6, 94)\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Loader>\n  );\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const TrendingMovies = styled.h2`\n  margin-bottom: 30px;\n  margin-top: 30px;\n  font-size: 36px;\n  text-align: center;\n  color: rgb(24, 6, 94);\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from '../../API';\nimport MovieList from 'components/Movielist/MovieList';\nimport Spinner from 'components/Loader/Loader';\nimport { TrendingMovies } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(false);\n    const fetchMovies = async () => {\n      try {\n        const movies = await getTrending();\n        setMovies(movies);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      <TrendingMovies>Trending Movies</TrendingMovies>\n      <MovieList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["axios","key","getTrending","data","response","results","getMovies","searchQuery","getMovieDeteils","id","MovieListUl","styled","MovieLi","MovieImg","MovieTitle","movies","location","useLocation","map","poster_path","title","to","state","from","src","alt","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","TrendingMovies","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","console","log","message","MovieList"],"sourceRoot":""}